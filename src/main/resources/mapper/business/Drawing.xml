<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wyait.manage.dao.business.DrawingMapper">

    <!--=Start getUsers 分页查询工位列表userSearch -->
    <select id="getDrawings" resultType="com.wyait.manage.entity.business.DrawingDTO">
        SELECT draw.id, draw.invCode, cinvName as invName, cinvStd as invStd, draw.procedureCode, procedureName, version, filepath , case when filepath is null then 0  when filepath  = '' then 0  else 1 end as hasupload, draw.is_del
        , isnull(draw.update_time, draw.insert_time) as updatetime
        FROM drawing draw
        INNER JOIN [192.168.0.243\erpdb].[UFDATA_003_2018].[dbo].Inventory inv on draw.invcode = inv.cinvcode
        INNER JOIN proced pr on draw.procedurecode = pr.procedurecode
        <where>
            <if test="DrawingSearchDTO.uinvcode != null and DrawingSearchDTO.uinvcode != ''">
                AND draw.invCode = #{DrawingSearchDTO.uinvcode}
            </if>
            <if test="DrawingSearchDTO.uprocedurecode != null and DrawingSearchDTO.uprocedurecode != ''">
                AND draw.procedureCode = #{DrawingSearchDTO.uprocedurecode}
            </if>
        </where>
    </select>

    <select id="findDrawingByInvCodeAndProcedureCode" resultType="com.wyait.manage.pojo.business.Drawing">
        SELECT draw.id, draw.invcode, draw.procedureCode, draw.version, draw.filepath
        FROM drawing draw
        INNER JOIN(
          SELECT invCode, procedureCode, MAX(version) version
          FROM drawing
          GROUP BY invCode, procedureCode) ma
        ON draw.invcode = ma.invcode AND draw.procedureCode = ma.procedurecode AND draw.version = ma.version
        WHERE draw.invCode = #{invCode} AND draw.procedureCode = #{procedureCode} AND is_del = 0
    </select>

    <insert id="insertTotallyNew" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.wyait.manage.entity.business.DrawingSetDTO">
        insert into drawing ( invCode,
		procedureCode,
		version,
		filepath, insert_uid, insert_time, is_del
		)
		values ( #{invCode,jdbcType=VARCHAR},
		#{procedureCode,jdbcType=VARCHAR},
		1,
		#{filePath,jdbcType=VARCHAR},
		#{insertUid,jdbcType=INTEGER},
		getdate(),
		#{isDel,jdbcType=BIT}
		)
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.wyait.manage.entity.business.DrawingSetDTO">
        insert into drawing ( invCode,
		procedureCode,
		version,
		filepath, insert_uid, insert_time, is_del
		)
		values ( #{invCode,jdbcType=VARCHAR},
		#{procedureCode,jdbcType=VARCHAR},
		#{version,jdbcType=INTEGER},
		#{filePath,jdbcType=VARCHAR},
		#{insertUid,jdbcType=INTEGER},
		getdate(),
		#{isDel,jdbcType=BIT}
		)
    </insert>

    <select id="getDrawing" resultType="com.wyait.manage.pojo.business.Drawing">
        SELECT id, invCode, procedureCode, version, filePath
        FROM drawing
        WHERE id = #{id, jdbcType=INTEGER}
    </select>

    <select id="findDrawingByIPV" resultType="com.wyait.manage.pojo.business.Drawing">
        SELECT draw.id, draw.invcode, draw.procedureCode, draw.version, draw.filepath
        FROM drawing draw
        WHERE draw.invCode = #{invCode} AND draw.procedureCode = #{procedureCode} AND draw.version = #{version} AND is_del = 0
    </select>

    <update id="update">
        update drawing
		set
		invCode = #{invCode,jdbcType=NVARCHAR},
		procedureCode = #{procedureCode,jdbcType=NVARCHAR},
		version = #{version,jdbcType=INTEGER},
		filePath = #{filePath,jdbcType=NVARCHAR},
		insert_uid = #{insertUid,jdbcType=INTEGER},
		update_time = getdate(),
		is_del = #{isDel,jdbcType=BIT}
		where id =
		#{id,jdbcType=INTEGER}
    </update>

    <update id="setDelDrawing">
        update  drawing
        set is_del = #{isDel,jdbcType=INTEGER}
        where id =
		#{id,jdbcType=INTEGER}
    </update>
</mapper>
